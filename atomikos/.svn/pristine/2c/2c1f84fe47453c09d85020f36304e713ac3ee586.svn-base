package com.mcnc.mbanking.auth.controller;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mcnc.mbanking.auth.domain.AuthenticationResult;
import com.mcnc.mbanking.auth.domain.PairKeyAuthentication;
import com.mcnc.mbanking.auth.domain.ResponseMessage;
import com.mcnc.mbanking.auth.domain.ResponseMessageBuilder;
import com.mcnc.mbanking.auth.util.Consts;
import com.mcnc.mbanking.auth.util.PairKeyAuthenticationUtils;

@RestController
public class AuthController {
	private static final Logger logger = LoggerFactory.getLogger(AuthController.class);

	@PostMapping("/api/auth/secure")
	public ResponseMessage<AuthenticationResult> generateKeyPairAuthentication(HttpSession httpSession) {
		
		AuthenticationResult result = null;
		
		PairKeyAuthentication pairKeyAuthentication = PairKeyAuthenticationUtils
				.generatePairKeyAuthentication();
		
		
		if(pairKeyAuthentication != null) {
			result = new AuthenticationResult(pairKeyAuthentication.getPublicKey(), 
					pairKeyAuthentication.getSalt()) ;
			httpSession.setAttribute(Consts.PAIR_KEY_SESSION_KEY, pairKeyAuthentication);
		}
		else {
			logger.error("Cannot authorized auth request");
		}
		
		return ResponseMessageBuilder.instance(result)
				.build();
	}
	
	@PostMapping("/api/auth/logout")
	public ResponseMessage<Boolean> logout(HttpSession httpSession) {
		
		httpSession.invalidate();
		
		return ResponseMessageBuilder.instance(Boolean.TRUE)
				.build();
	
	}
}
